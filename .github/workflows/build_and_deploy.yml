name: Build and Deploy Services

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ develop, main ]

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE: your-project-path

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            hello: ['cmd/hello/**', 'proto/**', 'pkg/**', '.github/workflows/**', 'Makefile']

  build:
    needs: changes
    if: ${{ needs.changes.outputs.services != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [hello]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Check if service changed
        id: check_changes
        run: |
          changed_services="${{ needs.changes.outputs.services }}"
          if [[ $changed_services == *"${{ matrix.service }}"* ]]; then
            echo "service_changed=true" >> $GITHUB_OUTPUT
          else
            echo "service_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build
        if: steps.check_changes.outputs.service_changed == 'true'
        run: |
          docker build --build-arg ENV=${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }} APP=${{ matrix.service }}
#          cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}/${{ matrix.service }}:buildcache
#          cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}/${{ matrix.service }}:buildcache,mode=max

#  deploy-dev:
#    needs: [changes, build]
#    if: github.ref == 'refs/heads/develop' && needs.changes.outputs.services != '[]'
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        service: [api, config, balance-checker, events, fiat, finance, geoip, kyc, kyt, mailer, payment, rates, reports, user, webhooks, widget, coordinator, dealer, aggregator, deposit, blockchain-explorer, quotes, trading]
#      fail-fast: false
#    steps:
#      - name: Check if service changed
#        id: check_changes
#        run: |
#          changed_services="${{ needs.changes.outputs.services }}"
#          if [[ $changed_services == *"${{ matrix.service }}"* ]]; then
#            echo "service_changed=true" >> $GITHUB_OUTPUT
#          else
#            echo "service_changed=false" >> $GITHUB_OUTPUT
#          fi
#
#      - name: Deploy to Dev
#        if: steps.check_changes.outputs.service_changed == 'true'
#        # Add your deployment steps here
#        run: |
#          echo "Deploying ${{ matrix.service }} to Dev environment"
#
#  deploy-prod:
#    needs: [changes, build]
#    if: github.ref == 'refs/heads/main' && needs.changes.outputs.services != '[]'
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        service: [api, config, balance-checker, events, fiat, finance, geoip, kyc, kyt, mailer, payment, rates, reports, user, webhooks, widget, coordinator, dealer, aggregator, deposit, blockchain-explorer, quotes, trading]
#      fail-fast: false
#    steps:
#      - name: Check if service changed
#        id: check_changes
#        run: |
#          changed_services="${{ needs.changes.outputs.services }}"
#          if [[ $changed_services == *"${{ matrix.service }}"* ]]; then
#            echo "service_changed=true" >> $GITHUB_OUTPUT
#          else
#            echo "service_changed=false" >> $GITHUB_OUTPUT
#          fi
#
#      - name: Deploy to Prod
#        if: steps.check_changes.outputs.service_changed == 'true'
#        # Add your deployment steps here
#        run: |
#          echo "Deploying ${{ matrix.service }} to Prod environment"
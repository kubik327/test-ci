name: Build and Deploy Services-approved

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ develop, main ]

env:
  DOCKER_REGISTRY: docker.io

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            hello: ['cmd/hello/**', 'proto/**', 'pkg/**', '.github/workflows/**', 'Makefile']
            bye: ['cmd/bye/**', 'proto/**', 'pkg/**', '.github/workflows/**', 'Makefile']
            # Add new services here following the same pattern
      - id: set-matrix
        run: |
          SERVICES=$(echo '${{ toJSON(steps.filter.outputs) }}' | jq -c 'to_entries | map(select(.value == "true")) | map(.key)')
          echo "matrix=${SERVICES}" >> $GITHUB_OUTPUT

  build:
    needs: changes
    if: ${{ needs.changes.outputs.matrix != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{fromJson(needs.changes.outputs.matrix)}}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ matrix.service }}:${{ github.sha }}-${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          build-args: |
            APP=${{ matrix.service }}